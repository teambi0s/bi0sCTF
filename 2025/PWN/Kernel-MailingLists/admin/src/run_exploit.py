#!/bin/python3
import hashlib
import subprocess
import tempfile 
import sys
import os

def showRes(byteData):
    decoded = ""
    for i in range (len(byteData)):
        decoded += chr(byteData[i])
    print(decoded)

def runPgm(dname,fname):
    dirname = dname
    os.chdir(f"rootfss")
    os.system(f"mkdir {dirname}")
    os.system(f"cp -r ../kernel/ ../scripts/ ./{dirname}/")
    os.system(f"../scripts/create_initrd.sh {dirname} {fname}")
    os.chdir(f"{dirname}")
    os.system("ls scripts")
    subprocess.run(["/bin/sh","-c","./kernel/run.sh"])
    exit(0)

def readFile(nbytes : int):
    fl = b""
    i = 0 
    while(i < nbytes):
        byt = sys.stdin.buffer.read(1)
        fl += byt
        i += 1  
    return fl
    
def main():
    sz = int(input("[+] Enter File Size : "))
    data = readFile(sz)
    with tempfile.NamedTemporaryFile('wb') as f:
            f.write(data)
            f.flush()
            dirname = hashlib.sha224(f"{f.name}".encode()).hexdigest()
            pid = os.fork()
            if(pid == 0):
                print("[+] RUNNING Kernel ...")
                runPgm(dirname,f.name)
            else:
                status = os.wait()
                # os.system(f"rm -rf ./rootfss/{dirname}")
                print("[+] BYE BYE !! ('v')/")
                exit(0)

if __name__ == '__main__':
    main()